// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(2), // program
			nil,      // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // int
			nil,      // float
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // program
			nil,          // id
			nil,          // :
			nil,          // var
			nil,          // ;
			nil,          // int
			nil,          // float
			nil,          // ,
			nil,          // {
			nil,          // }
			nil,          // empty
			nil,          // =
			nil,          // relop
			nil,          // print
			nil,          // (
			nil,          // )
			nil,          // +
			nil,          // -
			nil,          // *
			nil,          // /
			nil,          // cteI
			nil,          // cteF
			nil,          // if
			nil,          // else
			nil,          // cteS
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			shift(3), // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // int
			nil,      // float
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			shift(4), // :
			nil,      // var
			nil,      // ;
			nil,      // int
			nil,      // float
			nil,      // ,
			nil,      // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // :
			shift(7), // var
			nil,      // ;
			nil,      // int
			nil,      // float
			nil,      // ,
			shift(8), // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // :
			nil,      // var
			nil,      // ;
			nil,      // int
			nil,      // float
			nil,      // ,
			shift(8), // {
			nil,      // }
			nil,      // empty
			nil,      // =
			nil,      // relop
			nil,      // print
			nil,      // (
			nil,      // )
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cteI
			nil,      // cteF
			nil,      // if
			nil,      // else
			nil,      // cteS
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(9), // :, reduce: Ids
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			shift(21), // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			reduce(3), // {, reduce: Vars
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			shift(22), // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			shift(23), // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			shift(24), // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(12), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(14), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(14), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(14), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(14), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(15), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(15), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(15), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(15), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(16), // id, reduce: Estatuto
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(16), // }, reduce: Estatuto
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(16), // print, reduce: Estatuto
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(16), // if, reduce: Estatuto
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(26), // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(27), // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			shift(30), // int
			shift(31), // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: Bloque
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(11), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			shift(46), // cteS
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(8), // :, reduce: Ids
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			shift(49), // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			reduce(6), // ;, reduce: Tipo
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			reduce(7), // ;, reduce: Tipo
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(28), // *, reduce: Varcte
			reduce(28), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(17), // id, reduce: Asignacion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(17), // }, reduce: Asignacion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(17), // print, reduce: Asignacion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(17), // if, reduce: Asignacion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			shift(50), // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			shift(52), // +
			shift(53), // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			shift(56), // *
			shift(57), // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(27), // *, reduce: Factor
			reduce(27), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(29), // *, reduce: Varcte
			reduce(29), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(30), // *, reduce: Varcte
			reduce(30), // /, reduce: Varcte
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			shift(58),  // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(35), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			shift(59), // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			shift(60), // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			shift(61),  // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(36), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			shift(62), // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			shift(63), // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			reduce(4), // {, reduce: Args
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			shift(66), // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(26), // *, reduce: Factor
			reduce(26), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(25), // *, reduce: Factor
			reduce(25), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(70), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(71), // (
			nil,       // )
			shift(72), // +
			shift(73), // -
			nil,       // *
			nil,       // /
			shift(76), // cteI
			shift(77), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(70), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(71), // (
			nil,       // )
			shift(72), // +
			shift(73), // -
			nil,       // *
			nil,       // /
			shift(76), // cteI
			shift(77), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			shift(46), // cteS
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			shift(82), // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			shift(46), // cteS
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			shift(85), // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(18), // id, reduce: Expresion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(18), // }, reduce: Expresion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(18), // print, reduce: Expresion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(18), // if, reduce: Expresion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			shift(88), // +
			shift(89), // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			reduce(24), // *, reduce: Factor
			reduce(24), // /, reduce: Factor
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(20), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			shift(90), // *
			shift(91), // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(21), // relop, reduce: Exp
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(28), // +, reduce: Varcte
			reduce(28), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(70), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(76), // cteI
			shift(77), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(70), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(76), // cteI
			shift(77), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(22), // +, reduce: Termino
			reduce(22), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(27), // +, reduce: Factor
			reduce(27), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(29), // +, reduce: Varcte
			reduce(29), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(30), // +, reduce: Varcte
			reduce(30), // -, reduce: Varcte
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(23), // +, reduce: Termino
			reduce(23), // -, reduce: Termino
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(33), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(18), // ,, reduce: Expresion
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(18), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			shift(95), // +
			shift(96), // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(19), // id, reduce: Escritura
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(19), // }, reduce: Escritura
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(19), // print, reduce: Escritura
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(19), // if, reduce: Escritura
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(34), // ), reduce: Expresiones
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // :
			nil,       // var
			shift(97), // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			nil,       // (
			nil,       // )
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cteI
			nil,       // cteF
			nil,       // if
			shift(98), // else
			nil,       // cteS
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(18), // ), reduce: Expresion
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			shift(100), // +
			shift(101), // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(105), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(106), // (
			nil,        // )
			shift(107), // +
			shift(108), // -
			nil,        // *
			nil,        // /
			shift(111), // cteI
			shift(112), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(105), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(106), // (
			nil,        // )
			shift(107), // +
			shift(108), // -
			nil,        // *
			nil,        // /
			shift(111), // cteI
			shift(112), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(114), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(26), // +, reduce: Factor
			reduce(26), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(25), // +, reduce: Factor
			reduce(25), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(31), // id, reduce: Condicion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(31), // }, reduce: Condicion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(31), // print, reduce: Condicion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(31), // if, reduce: Condicion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			shift(119), // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			shift(120), // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(20), // id, reduce: Exp
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(20), // }, reduce: Exp
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(20), // print, reduce: Exp
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(20), // if, reduce: Exp
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			shift(124), // *
			shift(125), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(21), // id, reduce: Exp
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(21), // }, reduce: Exp
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(21), // print, reduce: Exp
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(21), // if, reduce: Exp
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(28), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(105), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(111), // cteI
			shift(112), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(105), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(111), // cteI
			shift(112), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(22), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(27), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(29), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(30), // relop, reduce: Varcte
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(23), // relop, reduce: Termino
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			reduce(24), // +, reduce: Factor
			reduce(24), // -, reduce: Factor
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(20), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(20), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			shift(129), // *
			shift(130), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(21), // ,, reduce: Exp
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			shift(131), // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(13), // }, reduce: Estatutos
			nil,        // empty
			nil,        // =
			nil,        // relop
			shift(19),  // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			shift(20),  // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(10), // ;, reduce: Bloque
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			reduce(10), // else, reduce: Bloque
			nil,        // cteS
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(20), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			shift(133), // *
			shift(134), // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(21), // ), reduce: Exp
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(136), // (
			nil,        // )
			shift(137), // +
			shift(138), // -
			nil,        // *
			nil,        // /
			shift(141), // cteI
			shift(142), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(136), // (
			nil,        // )
			shift(137), // +
			shift(138), // -
			nil,        // *
			nil,        // /
			shift(141), // cteI
			shift(142), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(144), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(26), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(25), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(145), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(146), // (
			nil,        // )
			shift(147), // +
			shift(148), // -
			nil,        // *
			nil,        // /
			shift(151), // cteI
			shift(152), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(145), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(146), // (
			nil,        // )
			shift(147), // +
			shift(148), // -
			nil,        // *
			nil,        // /
			shift(151), // cteI
			shift(152), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(32), // id, reduce: Condicion
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(32), // }, reduce: Condicion
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(32), // print, reduce: Condicion
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(32), // if, reduce: Condicion
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			shift(154), // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(155), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(156), // (
			nil,        // )
			shift(157), // +
			shift(158), // -
			nil,        // *
			nil,        // /
			shift(161), // cteI
			shift(162), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(155), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			shift(156), // (
			nil,        // )
			shift(157), // +
			shift(158), // -
			nil,        // *
			nil,        // /
			shift(161), // cteI
			shift(162), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(28), // id, reduce: Varcte
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(28), // }, reduce: Varcte
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(28), // print, reduce: Varcte
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(28), // if, reduce: Varcte
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(141), // cteI
			shift(142), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(141), // cteI
			shift(142), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(22), // id, reduce: Termino
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(22), // }, reduce: Termino
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(22), // print, reduce: Termino
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(22), // if, reduce: Termino
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(27), // id, reduce: Factor
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(27), // }, reduce: Factor
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(27), // print, reduce: Factor
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(27), // if, reduce: Factor
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(29), // id, reduce: Varcte
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(29), // }, reduce: Varcte
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(29), // print, reduce: Varcte
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(29), // if, reduce: Varcte
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(30), // id, reduce: Varcte
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(30), // }, reduce: Varcte
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(30), // print, reduce: Varcte
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(30), // if, reduce: Varcte
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(23), // id, reduce: Termino
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(23), // }, reduce: Termino
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(23), // print, reduce: Termino
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(23), // if, reduce: Termino
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			reduce(24), // relop, reduce: Factor
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(28), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(145), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(151), // cteI
			shift(152), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(145), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(151), // cteI
			shift(152), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(22), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(27), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(29), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(30), // ,, reduce: Varcte
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(23), // ,, reduce: Termino
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			reduce(10), // ;, reduce: Bloque
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(28), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(32), // id
			nil,       // :
			nil,       // var
			nil,       // ;
			nil,       // int
			nil,       // float
			nil,       // ,
			nil,       // {
			nil,       // }
			nil,       // empty
			nil,       // =
			nil,       // relop
			nil,       // print
			shift(35), // (
			nil,       // )
			shift(37), // +
			shift(38), // -
			nil,       // *
			nil,       // /
			shift(41), // cteI
			shift(42), // cteF
			nil,       // if
			nil,       // else
			nil,       // cteS
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(155), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(161), // cteI
			shift(162), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(155), // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(161), // cteI
			shift(162), // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(22), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(27), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(29), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(30), // ), reduce: Varcte
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(23), // ), reduce: Termino
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(173), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(26), // id, reduce: Factor
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(26), // }, reduce: Factor
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(26), // print, reduce: Factor
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(26), // if, reduce: Factor
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(25), // id, reduce: Factor
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(25), // }, reduce: Factor
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(25), // print, reduce: Factor
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(25), // if, reduce: Factor
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(174), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(26), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(25), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			shift(175), // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(26), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(25), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(24), // id, reduce: Factor
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			reduce(24), // }, reduce: Factor
			nil,        // empty
			nil,        // =
			nil,        // relop
			reduce(24), // print, reduce: Factor
			nil,        // (
			nil,        // )
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			reduce(24), // if, reduce: Factor
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			reduce(24), // ,, reduce: Factor
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // :
			nil,        // var
			nil,        // ;
			nil,        // int
			nil,        // float
			nil,        // ,
			nil,        // {
			nil,        // }
			nil,        // empty
			nil,        // =
			nil,        // relop
			nil,        // print
			nil,        // (
			reduce(24), // ), reduce: Factor
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cteI
			nil,        // cteF
			nil,        // if
			nil,        // else
			nil,        // cteS
		},
	},
}
